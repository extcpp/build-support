#!/usr/bin/env python3
# Copyright - 2019 - Jan Christoph Uhde <Jan@UhdeJC.com>
import os
import sys
from pathlib import Path
from subprocess import Popen

support_dir = Path(__file__).parent.parent.resolve()  # noqa: E402
modules_dir = support_dir.joinpath("lib", "python_modules")  # noqa: E402
sys.path.insert(0, str(modules_dir))  # noqa: E402

# get and init logging - must be first of our imports
from codecheck import logger  # noqa: E402
from codecheck.util import find_clang_format  # noqa: E402
from obi.util.path import apply_action_to_files, filter_cpp, create_filter_path


def create_action_format():
    clang_format = find_clang_format(15.0)

    if not clang_format:
        logger.fatal("no matching clang-format found")
        sys.exit(1)

    def action(path: Path):
        command = [clang_format, "-style=file", "-i", str(path)]

        logger.debug(command)
        Popen(command).wait()

    return action


if __name__ == "__main__":
    project_dir = Path(os.getcwd()).resolve()

    if not project_dir.joinpath(".clang-format").is_file():
        print("project_dir '{}' is not a valid repository".format(project_dir))
        sys.exit(1)

    for x in range(2):
        apply_action_to_files(
            project_dir,
            create_action_format(),
            filter_cpp,
            create_filter_path(Path(project_dir, "include"), Path(project_dir, "tests"), Path(project_dir, "examples")),
        )
