#!/bin/bash

get_source_dir(){
    echo "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
}

get_parent_dir(){
    local dir="$(dirname "$1")"
    if [[ -f $1 ]]; then
        echo "${dir%/*}"
    else
        echo "$dir"
    fi
}

msg(){
  echo "${build_prefix}$1"
}

err(){
  echo "$(tput setaf 1)ERROR: $1"
  tput sgr0
}

ferr(){
  echo "$(tput setaf 1)FATAL ERROR: $1"
  tput sgr0
  echo
  exit ${2:-1}
}

fserr(){
  section "$(tput setaf 1)FATAL ERROR: $1"
  tput sgr0
  echo
  exit ${2:-1}
}

section(){
  local fill_symbol="="
  local title=" $* "
  local lname="$build_prefix"

  local width=80
  local fill=$(( width-${#title} ))
  local rest=$(( fill % 2 ))
  fill=$(( fill / 2))
  local front_fill=$(( fill-${#lname} ))

  echo -n "$lname"
  for (( n=1 ; n <= front_fill ; n++ )); do echo -n "$fill_symbol" ; done
  tput bold
  echo -n "$title"
  tput sgr0
  for (( n=1 ; n <= (fill+rest) ; n++ )); do echo -n "$fill_symbol" ; done
  echo
}

cmake_get_version() {
    if type cmake 2>/dev/null; then
        echo "$(cmake --version | head -1 | awk '{print $3}')"
    fi
}

check_version(){
	# check_installed installed_version target_version
	# returns:
	# 0 - installed == target
	# 1 - installed > target
	# 2 - installed < target

    if [[ $1 == $2 ]]
    then
        return 0
    fi

    local IFS=.
    local i installed=($1) target=($2)

    # fill empty fields in installed
    for ((i=${#installed[@]}; i<${#target[@]}; i++)); do
        installed[i]=0
    done

    #compare
    for ((i=0; i<${#installed[@]}; i++)); do
        if [[ -z ${target[i]} ]]; then
            # fill empty fields in target with zeros
            target[i]=0
        fi

        if ((10#${installed[i]} > 10#${target[i]})); then
            return 1
        fi

        if ((10#${installed[i]} < 10#${target[i]})); then
            return 2
        fi
    done
    return 0
}
